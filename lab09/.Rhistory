x <- 1:10
y <- sqrt(x)
print(y)
x <- 1:10
y <- numeric(length(x))
for (i in 1:length(x)) {
y[i] <- sqrt(x[i])
}
print(y)
x <- 1:10
y <- sapply(x, sqrt)
print(y)
x <- as.list(1:10)
# y <- sqrt(x)    # What happens when you run this line?
y <- lapply(x, sqrt)
print(y)
y <- sqrt(x)    # What happens when you run this line?
x <- as.list(1:10)
y <- sqrt(x)    # What happens when you run this line?
y <- lapply(x, sqrt)
print(y)
x <- as.list(1:10)
y <- sqrt(x)    # What happens when you run this line?
x <- as.list(1:10)
y <- sapply(x, sqrt)
print(y)
class(y)
class)y
class(y)
sq <- function(x) {
return(x^2)
}
x <- 1:10
y <- sapply(x, sq)
print(y)
```
squish <- function(x) {
if (x < 0) {
x <- 0
} else if (x > 100) {
x <- 100
}
return(x)
}
x <- sapply(x, squish)
x
x <- lapply(x, squish)
x
x <- (1:12)^2 - 22
# Fill this in.
x <- sapply(x, squish)
x
x
set.seed(0)
x <- rnorm(10)
y <- numeric(length(x))
for (i in 1:length(x)) {
y[i] <- (x[i] - min(x)) / (max(x) - min(x))
}
y <- sapply(x, function(e) {
(e - min(x)) / (max(x) - min(x))
})
y
set.seed(0)
x <- rnorm(10)
y <- numeric(length(x))
for (i in 1:length(x)) {
y[i] <- (x[i] - min(x)) / (max(x) - min(x))
}
y
set.seed(0)
x <- rnorm(10)
# Fill this in.
y <- sapply(x, function(e) {
(e - min(x)) / (max(x) - min(x))
})
set.seed(0)
x <- matrix(rnorm(10), nrow = 2, ncol = 5)
y <- apply(x, 1, mean)
print(y)
z <- apply(x, 2, mean)
print(z)
set.seed(0)
df <- data.frame(x = rnorm(10), ltr = factor(sample(c("a", "b", "c"), 10, replace = TRUE)), nmbr = sample(c(1, 2, 3), 10, replace = TRUE))
byltr <- tapply(df$x, df$ltr, mean)
print(byltr)
# If the second argument is not a factor, it will be coerced to a factor.
bynmbr <- tapply(df$x, df$nmbr, mean)
print(bynmbr)
# Multiple factors can be included in a list or data frame.
byboth <- tapply(df$x, df[, c("ltr", "nmbr")], mean)
print(byboth)
df
to_celsius <- function(x) {
(x - 32) * (5/9)
}
to_celsius <- function(x) {
(x - 32) * (5/9)
}
to_kelvin <- function(x) {
(x + 459.67) * (5/9)
}
to_reaumur <- function(x) {
(x - 32) * (4/9)
}
to_rankine <- function(x) {
x + 459.67
}
convert <- function(x, to = "celsius") {
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
convert(30, 'celsius')
convert(30, 'celsius')
convert(30, 'Celsius')
convert(30, 'CELSIUS')
convert <- function(x, to = "celsius") {
to = tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
convert(30, 'celsius')
convert(30, 'Celsius')
convert(30, 'CELSIUS')
```{r, eval=TRUE}
paste0("file", 1:10, ".csv")
paste("file", sep = "", 1:10, ".csv")
library('stringr')
str_c("file", 1:10, ".csv")
file_names <- paste0("file", 1:10, ".csv")
file_names <- str_sub(file_names, 1, 4) <- 'dataset'
file_names <- str_sub(file_names, 1, 4) <- 'dataset'
file_names
file_names <- str_sub(file_names, 1, 4) <- 'dataset'
file_names
str_sub(file_names, 1, 4) <- 'dataset'
file_names
file_names <- paste0("file", 1:10, ".csv")
str_sub(file_names, 1, 4) <- 'dataset'
file_names
outfile <- "output.txt"
cat("This is the first line", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
output_file = "output.txt"
cat("---\n", file = output_file)
cat("title: \"hello world\"\n", file = output_file, append = TRUE)
cat("author: \"Junyu Wang 24153759\"\n", file = output_file, append = TRUE)
output_file = "output.txt"
cat("---\n", file = output_file)
cat("title: hello world\n", file = output_file, append = TRUE)
cat("author: Junyu Wang 24153759\n", file = output_file, append = TRUE)
cat("output: html_document\n", file = output_file, append = TRUE)
cat("---\n", file = output_file, append = TRUE)
cat("\n\n", file = output_file, append = TRUE)
cat("This is the first line\n", file = output_file, append = TRUE)
cat("A 2nd line\n", file = output_file, append = TRUE)
cat("\n\n\nThe quit brown fox jumps over the lazy dog", file = output_file, append = TRUE)
output_file = "output.txt"
cat("---\n", file = output_file)
cat("title: hello world\n", file = output_file, append = TRUE)
cat("author: Junyu Wang 24153759\n", file = output_file, append = TRUE)
cat("output: html_document\n", file = output_file, append = TRUE)
cat("---", file = output_file, append = TRUE)
cat("\n\n", file = output_file, append = TRUE)
cat("This is the first line\n", file = output_file, append = TRUE)
cat("A 2nd line\n", file = output_file, append = TRUE)
cat("\n\nThe quit brown fox jumps over the lazy dog", file = output_file, append = TRUE)
colors()
is_color <- function(col) {
col %in% colors()
}
is_color('yellow')  # TRUE
is_color('blu')     # FALSE
is_color('turkuiose') # FALSE
colplot <- function(col) {
if (is_color(col)) {
}else {
cat("invali color" + col)
}
}
colplot('tomate')
colplot <- function(col) {
if (is_color(col)) {
}else {
cat(paste0("invali color ", col))
}
}
colplot('tomate')
plot.new()
plot()
plot.new()
colplot <- function(col) {
if (is_color(col)) {
plot.new()
title(main = paste0("testing color ", col))
}else {
cat(paste0("invalid color ", col))
}
}
colplot('tomato')
colplot('tomate')
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
sum(sapply(letrs, function(letter) {
grep("[aeiou]", x = letter)
})
sum(sapply(letrs, function(letter) {
length(grep("[aeiou]", x = letter)) > 0
})
sum(sapply(letrs, function(letter) {
length(grep("[aeiou]", x = letter)) > 0
}))
number_of_letters_for_each_vowel_and_this_is_the_proper_function_name(letrs)
count_letters <- function(vec, letter) {
length(which(tolower(vec) == letter))
}
number_of_letters_for_each_vowel_and_this_is_the_proper_function_name <- function(letrs) {
c(paste0("a: ", count_letters(letrs, "a")))
}
number_of_letters_for_each_vowel_and_this_is_the_proper_function_name(letrs)
count_letters <- function(vec, letter) {
length(which(tolower(vec) == letter))
}
number_of_letters_for_each_vowel_and_this_is_the_proper_function_name <- function(letrs) {
c(paste0("a: ", count_letters(letrs, "a")), paste0("e: ", count_letters(letrs, "e")), paste0("i: ", count_letters(letrs, "i")), paste0("o: ", count_letters(letrs, "o")), paste0("u: ", count_letters(letrs, "u")))
}
number_of_letters_for_each_vowel_and_this_is_the_proper_function_name(letrs)
paste0("letters: ", length(letrs))
paste0("vowels: ", sum(sapply(letrs, function(letter) {
length(grep("[aeiou]", x = letter)) > 1
})))
paste0("vowels: ", sum(sapply(letrs, function(letter) {
length(grep("[aeiou]", x = letter)) > 0
})))
paste0("letters: ", length(letrs))
paste0("vowels: ", sum(sapply(letrs, function(letter) {
length(grep("[aeiou]", x = letter)) > 0
})))
paste0("consonants: ", sum(sapply(letrs, function(letter) {
length(grep("[^aeiou]", x = letter)) > 0
})))
